{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/block-counter/block-counter.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,eAAe,CAAC;KAGzB;;wEAJY,YAAY;4FAAZ,YAAY;QCNzB,0EACA;QAAA,uEACE;QAAA,qEACA;QAAA,wEAAO;QAAA,gFAAqB;QAAA,4DAAQ;QACpC,qEAEA;QAAA,qEACA;QAAA,qEACF;QAAA,4DAAO;QACP,uEACE;QAAA,+EAAuC;QACzC,4DAAO;QACP,4DAAO;;6FDNM,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACiC;;AAazE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBATlB,2DAAY;QACZ,4FAAqB,aAGrB,uEAAa;6FAKJ,SAAS;cAXrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,4FAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,uEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAkD;;AAW3C,MAAM,qBAAqB;IAIhC;QAFA,UAAK,GAAG,CAAC,CAAC;IAEM,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,WAAW,CAAC,SAAS,GAAG,CAAC;QACvB,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC;IAC1B,CAAC;IAED,IAAI,MAAM;QACR,OAAO,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;;0FAfU,qBAAqB;qGAArB,qBAAqB;QAN9B,4EAAuD;QAA/C,6IAAS,gBAAY,IAAC,CAAC,CAAC,IAAC;QAAsB,6DAAC;QAAA,4DAAS;QACjE,4EAAiC;QAAzB,6IAAS,iBAAa,IAAC;QAAE,6DAAC;QAAA,4DAAS;QAC3C,qEAAiD;QACjD,uDAAmB;;QAHe,gFAAmB;QAE/C,0DAAoB;QAApB,+IAAoB;QAC1B,0DAAmB;QAAnB,8FAAmB;;6FAGV,qBAAqB;cATjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE;;;;wBAIY;gBACtB,MAAM,EAAE,CAAC,6BAA6B,CAAC;aACxC;;;;;;;;;;;;;;ACVD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'block-counter';\n\n\n}\n","<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Angular Block Counter</title>\n  <base href=\"/\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body>\n  <app-block-counter></app-block-counter>\n</body>\n</html>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BlockCounterComponent } from './block-counter/block-counter.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BlockCounterComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-block-counter',\n  template: `\n    <button (click)=\"updateCount(-1)\" [disabled]=\"!count\"> -</button>\n    <button (click)=\"updateCount()\"> +</button>\n    <span [innerHTML]=\"blocks\" class=\"blocks\"></span>\n    {{count || 'none'}}`,\n  styles: ['.blocks {color: PaleGreen;}']\n})\nexport class BlockCounterComponent implements OnInit {\n\n  count = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  updateCount(increment = 1) {\n    this.count += increment;\n  }\n\n  get blocks() {\n    return '&#9609;'.repeat(this.count);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}